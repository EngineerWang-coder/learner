-----创建一个版本库---
$ mkdir 文件名  
$ cd 文件名
$ pwd 
-----将此目录变成Git可以管理的仓库,初始化一个仓库
$ git init 

------添加文件到仓库---  ----（修改提交的步骤与添加文件时一样）
$ git add leaner.txt   file1.txt  file2.txt
-------让Git 把文件提交到仓库----
$ git commit -m "wrote a readme file"
-----  -m 后面是本次提交的说明 -----提交文件分两步commit可以同时提交多个文件，所以add后面可以添加多个不同的文件
---提交分两步，是addd 时候文件是放到暂存区的，commit 时一次性将暂存区的修改都提交
------------------------------------------ 

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
----注册名称邮箱------

$ git status ----查看文件此时状态，文件是否被修改
$ git diff    ----查看上次提交的修改内容
$ git log --pretty=online  --提交的日志 得到之前提交的版本号
$ git reset --hard commit_id---回滚为指定commit_id的版本
$ git reset HEAD <file>可以把暂存区的修改撤销掉，重新放回工作区 ,   再$ git checkout 一下，工作区的修改也回滚掉了
$ git reflog -----查看历史日志

---git 管理的都是修改，并不是文件---新增文件也是修改---
$ git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销--
$ git rm test.txt 用于删除一个文件    （只执行git rm 相当于 工作区中删除并放到暂存区中，只有commit提交了版本库才能删除）
删除完文件后 $ git commit -m ".." ---删除命令提交命令都执行后，在版本库中就删除了

----切换分支 ---
$ git checkout learner    (learner是想要切换成的分支)


------------------------------将本地Git仓库与github 仓库 连接，获取git 的远程仓库-----------------------
--------------在github上添加SSH key （公钥），github 就可以识别是你推送的
1. $ ssh-keygen -t rsa -C "youremail@example.com" -----------原文件目录就有 idXX_rsa.pub 公钥
2.登录github 将“SSH Keys”在key 添加文本框中添加idXX_rsa.pub 公钥 内容

------------将本地仓库关联github 仓库-------
1.github上创建一个 repository (repo)
2. 再在本地的仓库下，执行命令 $ git remote add origin git....(github上SSH公钥)  （origin 远程库名称可以修改）
3.下一步将本地库内容推送     $ git push -u origin master 
————————————————————————————————————————————
创建repo 时远程库名称跟本地库名称要相同  （不然就容易push或者提交失败）


--要关联一个远程库，使用命令git remote add origin git@github.com:EngineerWang-coder/learner.git；
--然后推送master 分支内容  $ git push -u origin master
--以后每次提交 $ git push origin master 


--- $ git clone (github上SSH协议地址)  克隆远程库到本地


----$ git tag   打标签
----$ git remote rm origin 删除远程库
----$ git remote -v 查看远程库信息
